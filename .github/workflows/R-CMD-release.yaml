name: R Package Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
      
      - name: Install required R packages
        run: |
          install.packages("remotes")
          remotes::install_github("r-lib/desc")
      
      - name: Get version from DESCRIPTION
        id: get-version
        run: |
          library(desc)
          description <- desc::desc_get_field("Version")
          echo "::set-output name=VERSION::$description"
      
      - name: Get latest release
        id: latest-release
        uses: actions/github-script@v5
        with:
          script: |
            const { data: latestRelease } = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            return latestRelease.tag_name;
          result-encoding: string
      
      - name: Create Release if version changed
        if: steps.get-version.outputs.VERSION != steps.latest-release.outputs.result
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-version.outputs.VERSION }}
          release_name: Release ${{ steps.get-version.outputs.VERSION }}
          draft: false
          prerelease: false
